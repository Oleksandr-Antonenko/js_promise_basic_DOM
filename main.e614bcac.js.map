{"version":3,"sources":["scripts/main.js"],"names":["promise1","Promise","resolve","document","querySelector","addEventListener","promise2","reject","setTimeout","Error","generateNotification","className","message","body","insertAdjacentHTML","then","data","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAW,IAAIC,QAAQ,SAACC,GAC5BC,SAASC,cAAc,SAASC,iBAAiB,QAAS,WACxDH,EAAQ,6BAINI,EAAW,IAAIL,QAAQ,SAACC,EAASK,GACrCC,WAAW,WACTD,EAAO,IAAIE,MAAM,2BAChB,OAGCC,EAAuB,SAACC,EAAWC,GACvCT,SAASU,KAAKC,mBAAmB,YACjBH,qBAAAA,OAAAA,EAAcC,MAAAA,OAAAA,EAD9B,gBAKFZ,EACGe,KAAK,SAAAC,GAAQN,OAAAA,EAAqB,UAAWM,KAEhDV,EACGW,MAAM,SAAAC,GAASR,OAAAA,EAAqB,wBAAyBQ","file":"main.e614bcac.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst promise1 = new Promise((resolve) => {\n  document.querySelector('.logo').addEventListener('click', () => {\n    resolve('Promise was resolved!');\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\nconst generateNotification = (className, message) => {\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class=\"${className}\">${message}</div>\n  `);\n};\n\npromise1\n  .then(data => generateNotification('message', data));\n\npromise2\n  .catch(error => generateNotification('message error-message', error));\n"]}